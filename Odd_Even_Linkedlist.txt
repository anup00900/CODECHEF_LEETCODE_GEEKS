/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
        if(head == NULL || head->next == NULL || head->next->next == NULL)
        {
            return(head);
        }
        
        ListNode * t1 = head;
        ListNode * t2 = head->next;
        ListNode * p1 = head;
        ListNode * p2 = head->next;
        
       
        
            while(t2 != NULL && t1 != NULL)
            {
                t1->next=t2->next;
                t1=t1->next;
                if(t1==NULL)
                {
                    break;
                }
                p1=t1;
                t2->next = t1->next;
                t2=t2->next;
            }
        
        
        if(t2 == NULL)
        {
            t1->next = p2;
        }
        if(t1==NULL)
        {
            p1->next = p2;
        }
        return(head);
    }
};